buildscript {
    ext.kotlin_version = '1.8.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
    id 'signing'
}
apply plugin: 'kotlin'

repositories {
    mavenLocal()
    mavenCentral()
}


allprojects { apply plugin: "idea" }

sourceSets {
    main {
        java {
            
        }
        kotlin {
             
        }

    }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:1.9.1+kotlin.$kotlin_version"
    modImplementation "com.peasenet.util:gavinsmod-events:0.0.4"
    modImplementation "com.peasenet:gavui:0.0.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}
// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact javadocJar
            pom {
                name = "${project.maven_group}:${project.archives_base_name}"
                description = "A UI library for Minecraft aimed for developers."
                url = "https://github.com/gavinsmod/gemclient-core"
                license {
                    name = "MIT"
                    url = "https://opensource.org/licenses/MIT"
                }
                developers {
                    developer {
                        name = "Gavin Pease"
                        email = "gcpease@peasenet.com"
                        organization = "GT3CH1"
                        organizationUrl = "https://github.com/GT3CH1"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/gavinsmod/gavinsmod-events.git"
                    developerConnection = "scm:git:ssh://github.com:gavinsmod/gavinsmod-events.git"
                    url = "https://github.com/gavinsmod/gavinsmod-events/tree/master"
                }
            }

        }
    }
    repositories {
        maven {
            name = "SonaType"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername")
                password = project.findProperty("ossrhPassword")
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}



signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}